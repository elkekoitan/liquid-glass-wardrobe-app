name: Deploy to Firebase Hosting

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  FLUTTER_VERSION: '3.24.0'

jobs:
  deploy-web:
    name: Deploy Web to Firebase Hosting
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Create .env file
        run: |
          echo "FIREBASE_WEB_API_KEY=${{ secrets.FIREBASE_WEB_API_KEY }}" >> .env
          echo "FIREBASE_WEB_APP_ID=${{ secrets.FIREBASE_WEB_APP_ID }}" >> .env
          echo "FIREBASE_WEB_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_WEB_MESSAGING_SENDER_ID }}" >> .env
          echo "FIREBASE_WEB_PROJECT_ID=${{ secrets.FIREBASE_WEB_PROJECT_ID }}" >> .env
          echo "FIREBASE_WEB_AUTH_DOMAIN=${{ secrets.FIREBASE_WEB_AUTH_DOMAIN }}" >> .env
          echo "FIREBASE_WEB_STORAGE_BUCKET=${{ secrets.FIREBASE_WEB_STORAGE_BUCKET }}" >> .env
          echo "FIREBASE_WEB_MEASUREMENT_ID=${{ secrets.FIREBASE_WEB_MEASUREMENT_ID }}" >> .env
          echo "FIREBASE_ANDROID_API_KEY=${{ secrets.FIREBASE_ANDROID_API_KEY }}" >> .env
          echo "FIREBASE_ANDROID_APP_ID=${{ secrets.FIREBASE_ANDROID_APP_ID }}" >> .env
          echo "FIREBASE_IOS_API_KEY=${{ secrets.FIREBASE_IOS_API_KEY }}" >> .env
          echo "FIREBASE_IOS_APP_ID=${{ secrets.FIREBASE_IOS_APP_ID }}" >> .env
          echo "FIREBASE_IOS_IOS_BUNDLE_ID=${{ secrets.FIREBASE_IOS_IOS_BUNDLE_ID }}" >> .env
          echo "FIREBASE_MACOS_API_KEY=${{ secrets.FIREBASE_MACOS_API_KEY }}" >> .env
          echo "FIREBASE_MACOS_APP_ID=${{ secrets.FIREBASE_MACOS_APP_ID }}" >> .env
          echo "FIREBASE_MACOS_IOS_BUNDLE_ID=${{ secrets.FIREBASE_MACOS_IOS_BUNDLE_ID }}" >> .env
          echo "FIREBASE_WINDOWS_API_KEY=${{ secrets.FIREBASE_WINDOWS_API_KEY }}" >> .env
          echo "FIREBASE_WINDOWS_APP_ID=${{ secrets.FIREBASE_WINDOWS_APP_ID }}" >> .env
          echo "GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}" >> .env

      - name: Install Flutter dependencies
        run: flutter pub get

      - name: Build Web
        run: flutter build web --release --web-renderer canvaskit

      - name: Deploy to Firebase Hosting
        run: |
          echo "${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}" > firebase-service-account.json
          export GOOGLE_APPLICATION_CREDENTIALS=firebase-service-account.json
          firebase deploy --only hosting --project ${{ secrets.FIREBASE_PROJECT_ID }}
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

      - name: Clean up
        run: rm -f firebase-service-account.json